variables:
  NAMESPACE: redash

stages:
  - docker_compose
  - docker_build
  - kubernetes

docker_compose:
  stage: docker_compose
  script:
    - VERSION=$(cat config.yml | grep version | cut -d ":" -f 2 | tr -d ' ')
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -t $CI_REGISTRY_IMAGE:$VERSION
    - docker push $CI_REGISTRY_IMAGE:$VERSION
  except:
    - main
  tags:
    - libvision

docker_build:
  stage: docker_build
  script:
    - VERSION=$(cat config.yml | grep version | cut -d ":" -f 2 | tr -d ' ')
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build . -t $CI_REGISTRY_IMAGE:$VERSION
    - docker push $CI_REGISTRY_IMAGE:$VERSION
  only:
    - main
  tags:
    - libvision

kubernetes:
  stage: kubernetes
  image: dtzar/helm-kubectl
  script:
    - VERSION=$(cat config.yml | grep version | cut -d ":" -f 2 | tr -d ' ')
    - sed -i "s/<VERSION>/$VERSION/g" .ci/deployment.yaml
    - sed -i "s/<POSTGRES_USER>/$POSTGRES_USER/g" .ci/deployment.yaml
    - sed -i "s/<POSTGRES_PASSWORD>/$POSTGRES_PASSWORD/g" .ci/deployment.yaml
    - sed -i "s/<POSTGRES_HOST>/$POSTGRES_HOST/g" .ci/deployment.yaml
    - sed -i "s/<POSTGRES_PORT>/$POSTGRES_PORT/g" .ci/deployment.yaml
    - sed -i "s/<POSTGRES_DB>/$POSTGRES_DB/g" .ci/deployment.yaml
    - kubectl apply -f .ci/deployment.yaml --namespace $NAMESPACE
    - kubectl apply -f .ci/service.yaml --namespace $NAMESPACE
    - kubectl apply -f .ci/ingress.yaml --namespace $NAMESPACE
  only:
    - main
  tags:
    - libvision
